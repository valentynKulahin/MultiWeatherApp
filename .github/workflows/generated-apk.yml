# This is a basic workflow to help you get started with Actions

name: Generated APK Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:        
  build:
    if: "contains(github.event.head_commit.message, 'deploy')"
    permissions: write-all
    name: Android Build APK    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        id: build_apk
        run: |
          ./gradlew assembleDebug --stacktrace
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          path: app/build/outputs/apk/debug/debug-apk.apk
          if-no-files-found: error
      - name: Get local.properties from secrets
        run: echo "${secret.LOCAL_PROPERTIES }" > $GITHUB_WORKSPACE/local.properties

  release:
     if: "contains(github.event.head_commit.message, 'deploy')"
     name: Release APK
     needs: build
     runs-on: ubuntu-latest
     steps:
       - name: Download APK from build
         uses: actions/download-artifact@v1
         with:
           name: artifact
       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: ${{ github.run_number }}
           release_name: ${{ github.event.repository.name }} v${{ github.run_number }}          
       - name: Upload Release APK
         id: upload_release_asset
         uses: actions/upload-release-asset@v1.0.1
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           upload_url: ${{ steps.create_release.outputs.upload_url }}
           asset_path: artifact/debug-apk.apk
           asset_name:  ${{ github.event.repository.name }} v${{ github.run_number }}.apk
           asset_content_type: application/zip
